syntax = "proto3";

package grill.v1;

import "grill/v1/rpc_ping.proto";
import "grill/v1/rpc_send_status.proto";
import "grill/v1/rpc_get_clusters.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Grill API";
    version: "v1";
  };
};

service GrillService {
  rpc Ping (PingRequest) returns (PingResponse){
    option (google.api.http) = {
      get: "/v1/ping"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Ops"
      summary: "Ping the server";
      description: "Ping the server";
    };
  }

  rpc SendStatus (SendStatusRequest) returns (SendStatusResponse){
    option (google.api.http) = {
      post: "/v1/status"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Grill"
      summary: "Send status to the server";
      description: "Send status to the server";
    };
  }

  rpc GetClusters (GetClustersRequest) returns (GetClustersResponse){
    option (google.api.http) = {
      get: "/v1/clusters"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Grill"
      summary: "Get clusters";
      description: "Get clusters";
    };
  }

}
